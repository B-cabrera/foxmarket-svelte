// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum representing the dorms on campus
enum Dorm {
  CHAMPAGNAT
  LEO
  MARIAN
  MIDRISE
  SHEAHAN
  FOY
  FULTON
  NEW
  LOWER_CEDAR
  UPPER_CEDAR
  OSHEA
  LAVELLE
  MCCORMICK
  NEW_FULTON
  WARD
}

// Represent a user in the marketplace
model User {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid // references supabase auth.users
  username         String     @unique
  listings         Listing[] // all the listings posted by the user
  favorites        Favorite[] // all the listing that the user has favorited
  ChatsSelling     Chat[]     @relation("ChatSeller")
  ChatsBuying      Chat[]     @relation("ChatBuyer")
  SentMessages     Message[]  @relation("SentMessages")
  RecievedMessages Message[]  @relation("ReceivedMessages")
}

// Representing a post by a seller in the marketplace
model Listing {
  id       String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  seller   User   @relation(fields: [sellerId], references: [id])
  sellerId String @db.Uuid // the ID of the seller, references the user model

  listingTitle String     @db.VarChar(30)
  imageUrl     String
  description  String     @db.VarChar(500)
  price        Decimal    @db.Decimal(10, 2)
  location     Dorm
  brand        String?    @db.VarChar(30)
  size         String?    @db.VarChar(4)
  sold         Boolean    @default(false)
  favoritedBy  Favorite[] // only included to satisfy Prisma relation requirement
  Chats        Chat[] // only included to satisfy Prisma relation requirement
}

// Representing the many:many relationship with users and favorited listings
model Favorite {
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.Uuid // the ID of the user who favorited the listing
  listing   Listing @relation(fields: [listingId], references: [id])
  listingId String  @db.Uuid // the ID of the post that the user favorited

  @@id([userId, listingId])
}

model Chat {
  id       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  item     Listing   @relation(fields: [itemId], references: [id])
  itemId   String    @db.Uuid // item that "sparked" the conversation
  seller   User      @relation("ChatSeller", fields: [sellerId], references: [id])
  sellerId String    @db.Uuid
  buyer    User      @relation("ChatBuyer", fields: [buyerId], references: [id])
  buyerId  String    @db.Uuid
  Message  Message[]
}

model Message {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  conversation   Chat     @relation(fields: [conversationId], references: [id])
  conversationId String   @db.Uuid
  timeSent       DateTime @db.Timestamp(3)
  sender         User     @relation("SentMessages", fields: [senderId], references: [id])
  senderId       String   @db.Uuid
  receiver       User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId     String   @db.Uuid
  content        String   @db.VarChar(250)
  read           Boolean  @default(false)
}
